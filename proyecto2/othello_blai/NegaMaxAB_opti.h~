#include "othello_cut.h"
#include <iostream>
#include <climits>

class NegaMaxABopti_ {

public:

    int NegaMaxAB(state_t state, int depth, bool color,int alpha,int beta) {
         
        if (state.terminal() || depth == 0) {
            //std::cout << "ee es" << state.value();
            return ((color ? 1 : -1) * state.value());
        }
          
	    int m = alpha;
        int res_negamax_ab;
        bool tmp = false;

        std::vector<state_t> children = state.get_children(state,color);
        for( int i = 0; i < children.size(); i++ ) {
                tmp = true;
                res_negamax_ab = (-1) * NegaMaxAB(children[i],depth-1,!color,(-1)*beta,(-1)*m);
                if (res_negamax_ab > m ) m = res_negamax_ab;
                if (color) {if (m>=beta) return m;}
        }
        
        if (!tmp ) {
            m = (-1)*NegaMaxAB(state, depth-1, !color,(-1)*beta,(-1)*m);
        }

        return m;
    }

};
